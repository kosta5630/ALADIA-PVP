local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- FOV Settings
local FOV_RADIUS = 100
local AIM_AT_BODY_PART = "Head" -- Now aiming at head
local ENABLE_AIMBOT = true

-- Drawing the FOV Circle (for executors that support Drawing API)
local circle = Drawing.new("Circle")
circle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
circle.Radius = FOV_RADIUS
circle.Color = Color3.fromRGB(255, 0, 0) -- Red circle
circle.Thickness = 1.5
circle.Transparency = 0.5
circle.Filled = false
circle.Visible = true

-- Function to get closest visible enemy to the center of screen (crosshair)
local function getClosestTarget()
	local closestPlayer = nil
	local shortestDistance = FOV_RADIUS

	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild(AIM_AT_BODY_PART) then
			local part = player.Character[AIM_AT_BODY_PART]
			local screenPos, onScreen = Camera:WorldToViewportPoint(part.Position)
			if onScreen then
				local distance = (Vector2.new(screenPos.X, screenPos.Y) - circle.Position).Magnitude
				if distance < shortestDistance then
					shortestDistance = distance
					closestPlayer = part
				end
			end
		end
	end

	return closestPlayer
end

-- Aimbot loop (runs every frame)
RunService.RenderStepped:Connect(function()
	if ENABLE_AIMBOT then
		local target = getClosestTarget()
		if target then
			Camera.CFrame = CFrame.new(Camera.CFrame.Position, target.Position)
		end
	end
end)
